{
  "project_name": "wharf",
  "project_type": "architectural_coordination",
  "last_updated": "2025-08-22",
  "context": {
    "primary_purpose": "Wharf Platform superproject - architectural coordination workspace for complete ecosystem",
    "scope": "Architecture and planning only - no active development",
    "working_directory": "/home/serge/src/autops/wharf"
  },
  "ecosystem_components": {
    "active": {
      "wharf": {
        "status": "legacy_prototype",
        "language": "Go 1.19",
        "purpose": "Core REST API and platform services",
        "issues": [
          "hardcoded_credentials",
          "technical_debt",
          "no_tenant_isolation"
        ],
        "priority": "modernization_required"
      },
      "wharf-web": {
        "status": "modern_foundation",
        "language": "Go 1.24",
        "purpose": "Web UI with ZITADEL authentication",
        "strengths": [
          "zitadel_integration",
          "multi_tenancy",
          "modern_architecture"
        ],
        "priority": "reference_implementation"
      },
      "barge": {
        "status": "production_ready",
        "language": "Go 1.24",
        "purpose": "Kubernetes cluster provisioning via Pulumi",
        "technologies": [
          "pulumi",
          "talos_linux",
          "hetzner_cloud",
          "nats"
        ],
        "priority": "stable_foundation"
      },
      "crane": {
        "status": "active_development",
        "language": "Go 1.22",
        "purpose": "CDK8s constructs and GitOps orchestration",
        "technologies": [
          "cdk8s",
          "flux_v2",
          "oci_registries"
        ],
        "priority": "gitops_foundation"
      },
      "eot": {
        "status": "undefined_placeholder",
        "purpose": "unknown",
        "priority": "definition_required",
        "blocking": "architectural_decisions"
      }
    },
    "deprecated": {
      "oper": {
        "status": "removed",
        "reason": "consolidated_into_crane",
        "migration": "typescript_to_go_complete"
      }
    }
  },
  "architecture_decisions": {
    "technology_stack": {
      "backend": "go_standardized",
      "database": "mongodb",
      "authentication": "zitadel_oidc",
      "infrastructure": "pulumi_talos_hetzner",
      "gitops": "flux_v2_oci",
      "frontend": "templ_bulma_ssr"
    },
    "migration_status": {
      "keycloak_to_zitadel": "in_progress_wharf_web_complete",
      "typescript_elimination": "complete_oper_consolidated",
      "multi_tenancy": "partial_wharf_web_only"
    }
  },
  "task_management": {
    "primary_document": ".claude/TASKS.md",
    "summary_document": "ADR/TODO.md",
    "architectural_index": "ADR/README.md",
    "relationship": "TASKS.md is authoritative, TODO.md is synchronized summary",
    "phase_approach": "abstract_phases_no_time_references"
  },
  "critical_research_priorities": [
    "eot_component_purpose_definition",
    "nats_evaluation_service_communication",
    "zitadel_integration_patterns",
    "multi_tenant_data_isolation",
    "wharf_api_modernization"
  ],
  "architectural_patterns": {
    "control_plane_workload_plane": "autops_managed_control_customer_infrastructure_workload",
    "self_hosted_philosophy": "avoid_vendor_lockin_vanilla_kubernetes",
    "abstraction_approach": "hide_kubernetes_complexity"
  },
  "session_insights": [
    "ADR TODO was only summary, TASKS.md is primary - now corrected",
    "Time references removed from all documents per standards",
    "CLAUDE.md updated to reference TASKS.md hierarchy",
    "Multi-tenancy implementation gaps identified across components",
    "Core wharf API technical debt blocks progress"
  ],
  "next_actions": [
    "Define eot component purpose (blocks architecture)",
    "Complete wharf API ZITADEL integration",
    "Implement multi-tenancy across all components",
    "Begin Phase 1 research documents per TASKS.md"
  ],
  "project_id": "wharf-f510",
  "migrated_from": "/home/serge/.claude/ai_memory/projects/wharf.json",
  "migration_date": "2025-08-22T13:18:30Z",
  "structure_version": "2.0"
}
