#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail


# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

###############################################################################

PA_SINK_DEFAULT_NAME="${PA_SINK_DEFAULT_NAME:-Built-in Audio}"

function outputs() {
	outputs="$(pactl list short sinks | awk '{print $1}' |
				grep -v ^$ | sort -n | xargs) "
	notify_debug "outputs: ${outputs}"
	current_sink=$(defaultsink)
	notify_debug "current sink: ${current_sink}"
	# make the current default sink the first in the list, whilst keeping the
	# list circular sorted
	notify_debug "ordered sinks, default first: ${current_sink} / ${outputs##*${current_sink} } / ${outputs%%${current_sink}*} "
	echo "${current_sink}  ${outputs##*${current_sink} }  ${outputs%%${current_sink}*} "
}

function outputsnames() {
	local _sinkname
	for sink in $(outputs)
	do
		_sinkname=$(sinkname $sink)
		echo "$sink ${_sinkname}"
		notify_debug "sink $sink = ${_sinkname}"

	done
}

function defaultsink() {
	ponymix defaults | grep ^sink | awk '{print $2}' | sed 's/://'
}

function sinkname() {
	local sinknum=${1:-0}
	pactl list sinks | grep -A3 "#${sinknum}$" | grep Description | cut -d: -f 2- | xargs
}

function selectsink() {
	local _selectedsink
	_selectedsink=$(outputsnames | (rofi -dmenu -p "Select audio output: " -l 20 || wofi -dmenu -p "Select audio output: " -l 20 ||:) | awk '{print $1}')
	notify_debug "selected sink: ${_selectedsink}"
	echo ${_selectedsink}
}

function updatesink() {
	local next_sink=$1
	pacmd set-default-sink $next_sink
	pactl list short sink-inputs | awk '{print $1}' | while read -r streamid
	do
		notify_debug "move sink-input '$streamid' to '$next_sink'"
		pactl move-sink-input "$streamid" "$next_sink"
	done
}

function main() {
	local action=${1:-}
	pulseaudio --check || pulseaudio --start

	previous_sink=$(defaultsink)
	previous_sink_name=$(sinkname $previous_sink)

	if [ "${action}" = "builtin" ]
	then
		next_sink="$(pa-default builtin)"
		next_sink_name="${PA_SINK_DEFAULT_NAME}"
	else
		next_sink=$(selectsink)
		if [ -z "${next_sink}" ]
		then
			notify_debug "no sink selected, exiting"
			exit 0
		fi
		next_sink_name=$(sinkname $next_sink)
	fi

	if [ ! "${previous_sink}" -eq "${next_sink}" ]
	then
		notify_desktop low "Activated: $next_sink_name" "previously: $previous_sink_name" "volume-knob" $(basename ${0})
	else
		notify_desktop low "Confirming: $next_sink_name" "already set: $previous_sink_name" "volume-knob" $(basename ${0})
	fi
	updatesink $next_sink
}

main ${1:-}
