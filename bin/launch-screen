#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail

# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

session_exists() {
    if (screen -list | grep -q "\.$sname" >/dev/null 2>&1)
    then
		notify_debug "session $sname exists"
		return 0
    else
		notify_debug "session $sname does not exist"
		return 1
    fi
    }

not_empty() {
    if [ ! -z "$*" ]
    then    return 0
    else    return 1
    fi
    }

check_options() {
	if [ -x "$(which ${3:-} 2>/dev/null)" ]
    then
		notify_debug "command starts at third parameter, first is session name, second a special command option"
        sname="$1"
        shift # name is gone
        cmd="$1"
        shift # cmd is gone
        command="$*"

	elif [ -x "$(which ${2:-} 2>/dev/null)" ]
    then
		notify_debug "command starts at second parameter, first is session name"
        cmd="_start_or_attach"
        sname="$1"
        shift # name is gone
        command="$*"

	elif [ -x "$(which ${1:-} 2>/dev/null)" ]
    then
		notify_debug "command starts at first parameter, basecommand as sessionname"
        cmd="_start_or_attach"
        sname="$1"
        command="$*"

    else
		notify_debug "no executable command found"
		command=""
        if [ $# -eq 1 ]
        then
			notify_debug "1 parameter given, assuming session name"
            sname="$1"
            cmd="_start_or_attach"
		else
			errexit "we don't know what to do"
		fi
	fi
	wname="$(echo ${command:-} | sed -e 's/-//g' -e 's/\s/_/g')"
    }

build_screen_options() {
    case $cmd in
        _start_or_attach)
            if session_exists
            then # attach
                notify_debug "attach to screen session $sname"
                options="-Rx $sname"
                command=""
            else # start new
                notify_debug "start new screen session $sname"
                if not_empty $command
                then
					options="-S $sname -X screen -t $wname"
                else
                    errexit "no existing session and no command given"
                fi
            fi
            ;;
        add)
            if not_empty $command
            then
                if session_exists
                then # add new window and command
                    notify_debug "add new command to session $sname"
                else # start new
                    notify_debug "start new screen session $sname"
                fi
                options="-S $sname -X screen -t $wname"
            else
                options=""
            fi
            ;;
        lockscreen)
            options="-S $sname -X lockscreen"
            command=""
            ;;
        *)
            options=""
            command=""
            ;;
    esac
    }

init_screen() {
    if ! session_exists && [ ${cmd} = "add" ]
	then
		notify_debug "initializing new screen session $sname"
		# create session window zeroe with sleep command - this would
		# remain visible in the process list
		screen -S $sname -t init -d -m sleep 30
		# give some time to init
		sleep 1
	fi
	}
execute_screen() {
	init_screen
	notify_debug "Executing: screen $options $command"
	echo screen $options $command
	if [[ "$command" =~ "setsbg loop" ]]
	then
		screen $options bash -c "$command"
	else
		screen $options bash -c "$command 2>&1 | ts '%Y:%M:%d-%H:%M:%S'"
	fi
    }

main() {
    if not_empty "$@"
	then
		notify_debug "launching with parameters '$*'"
        check_options "$@"
        build_screen_options "$@"
        if [ -n "$options$command" ]
		then
            execute_screen
        else
            echo "no command given"
        fi
    else
        echo "missing session name" >&2
    fi
    }

main "$@"
