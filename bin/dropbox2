#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail

# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

###############################################################################
DBDIR="$HOME/Dropbox"

function get_instances() {
	cd ${DBDIR}
	ls | grep -v 'lost+found' | sort
}

function get_commands() {
	dropbox help | grep '^ ' | awk '{print $1}' | sort
}

function help() {
	echo
	echo "$0 <instance> <dropbox command>"
	echo "$0 <dropbox commands   # which will run said command for every instance"
	echo
	echo "Available instances: ${dbinstances[@]}"
	echo
	echo "Available commands: ${dbcommands[@]}"
	echo
}

declare -a dbinstances=($(get_instances))
declare -a dbcommands=($(get_commands))

# https://unix.stackexchange.com/a/177589
declare -A dbinstmap
declare -A dbcommap
for key in "${!dbinstances[@]}"; do dbinstmap[${dbinstances[$key]}]="$key"; done
for key in "${!dbcommands[@]}";  do  dbcommap[${dbcommands[$key]}]="$key";  done

arg=${1:-}

if [ -z "$arg" ]
then
	help
	exit 1
elif [ -n "${dbinstmap[$arg]:-}" ]
then
	instance=${arg}
	shift
    docker exec dropbox-${instance} dropbox "$@"
elif [ -n "${dbcommap[$arg]:-}" ]
then
	for i in ${dbinstances[@]}
	do
		echo -n "${i} : "
		docker exec dropbox-${i} dropbox "$@"
	done
else
	echo "First argument '$arg' is not a dropbox instance or a dropbox command"
	help
	exit 2
fi


