#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail

# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

###############################################################################

function execute() {
	args=$1
	output=$(eval $args 2>/dev/null ||:)
}

case ${1:-} in
	audio_current_sink)
		execute "pa-default long | sed -e 's/ - / /' -e 's/Built-in.*/Builtin/' -e 's/HyperX 7.1 Audio Analog Stereo/Trust/' 2>/dev/null ||:"
		;;
	audio_current_sink_volume)
		if ponymix is-muted
		then
			output="ðŸš«"
		else
			execute "ponymix get-volume"
			if [ -n "${output}" ]
			then
				if [ "${output}" -gt 0 ]
				then
					output="ðŸ”Š${output}%"
				else [ "${output}" -eq 0 ]
					output="ðŸš«"
				fi
			fi
		fi
		;;
	audio_sonos_volume)
		execute "sonos state 2>/dev/null ||:"
		if [ "${output}" != "" ] && [ "${output}" != "STOPPED" ]
		then
			execute "sonos volume 2>/dev/null ||:"
			if [ "${output}" -gt 0 ]
			then
				output="Sonos ðŸ”Š${output}%"
			else [ "${output}" -eq 0 ]
				output="Sonos ðŸš«"
			fi
		else
			output=""
		fi

		;;
	wifi)
		execute "nmcli -t radio wifi"
		if [ "${output}" = "enabled" ]
		then
			output="ï‡«"
		else
			output="âŠ¥"
		fi
		;;
	now_playing)
		output=""
		player=""
		player0=$(cat $HOME/.playerctl_active)
		if [ -n "$player0" ]
		then
			stat=""
			player="$(echo -n $player0 | tr '[:lower:]' '[:upper:]')"
			player0="-p $player0"
			state="$(playerctl $player0 status 2>&1 ||:)"

			if   [ "${state}" = "Playing" ]
			then
					stat="â–¶  "
					nowply=$(playerctl $player0 metadata vlc:nowplaying);
					if [ -n "$nowply" ]
					then
							title="$nowply "
							artist=""
					else
						artist=$(playerctl $player0 metadata xesam:artist)
						title=$( playerctl $player0 metadata xesam:title)
						if [ -n "$artist" ]
						then
							if [ -n "$title" ]
							then
								artist="${artist}: "
								title="$title "
							else
								artist="${artist} "
							fi
						else
							if [ -n "$title" ]
							then
								title="$title "
							fi
						fi
					fi
					output="${player} ${stat}${artist}${title}"
			elif [ "${state}" = "Paused" ]
			then
					stat="â–Œâ–Œ "
					output="${player} ${stat}"
			elif [ "${state}" = "Stopped" ]
			then
					stat="â—¼ "
					output="${player} ${stat}"
			fi
		else
				output="â—¼ "
		fi
		;;
	refresh)
		p3spid=$(pgrep -f "python3 $HOME/.i3/i3pystatusconf.py")
		kill -SIGUSR1 ${p3spid}
		output=""
		echo "py3status process ${p3spid} refreshed"
		;;
	*)
		notify_error "$(
			echo "Possible options are:";
			grep -e '^[[:space:]].*)' $0 | grep -v '(' | sed -e 's/\s//g' -e 's/\*//'  -e 's/)//')\n"
		output="UNKNOWN ITEM"
		;;
esac

echo -n "${output}"
