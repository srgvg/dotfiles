#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail


# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

# full path to this script
self=$(realpath $(dirname $(realpath -e $0))/$(basename $0))

_job=${*:-}
if [ -n "${_job}" ]
then
	notify_debug "Replacing default job list with '${_job}'"
	JOBS="${_job}"
else
	# list of jobs to execute in screen
	## filter comments and empty lines
	JOBS=$(cat <<- EOF | sed -e '/\s*#/d' -e 's/^\s*$//' -e '/^ *$/d'

		/home/serge/bin2/syncthing serve --no-browser --verbose --logfile=$HOME/logs/syncthing-$HOSTNAME.log --log-max-old-files=2 --log-max-size=5242880
		runflatpak.sh nextcloud
		runflatpak.sh signal
		runflatpak.sh mattermost
		# runflatpak.sh slack
		# runflatpak.sh spotify --show-console

	EOF
	)
	if [ -f "${self}-$(hostname)" ]
	then
		source "${self}-$(hostname)"
	fi
	JOBS="$(echo "$JOBS" | sort -u)"
fi


I3SCREENPID=$(pgrep -f "SCREEN -S i3jobs" 2>/dev/null || echo 0)

function i3-launch-job() {
    if [ -z "$*" ]
    then
        notify_error "Nothing to launch"
        return
    fi
    notify "Checking for \"$*\" ... "
	if _pid=$(pgrep -P ${I3SCREENPID} -f "$*" -u $(whoami) -r R,S | xargs)
    then
	notify "              ... already running (${_pid})"
    else
        notify "              ... !! STARTING UP !!"
        notify "              ..... $*"
        # shellcheck disable=SC2048
	launch-screen i3jobs add $* | sed -e 's/^/                -   /'
    fi
}

# launch the jobs
SLEEP_COUNTER=0
echo "$JOBS" | while read -r line
do
	# make sure we replace an existing setbg loop
	if [[ "$line" =~ "setsbg loop" ]] || [[ "$line" =~ "setbg loop" ]]
	then
		if _pid=$(pgrep -P ${I3SCREENPID} -f "bg loop")
		then
			kill -9 ${_pid}
			notify_debug "Killed existing set(s)bg loop (${_pid})"
		fi
	fi
	if ifinteractive
	then
		echo DEBUG IN TERMINAL
		i3-launch-job $line
	else
		echo DEBUG NOT NOT NOT IN TERMINAL
		sleep ${SLEEP_COUNTER} && i3-launch-job $line
		((SLEEP_COUNTER=SLEEP_COUNTER+1))
	fi
	echo
done

if ifinteractive
then
	notify_debug "Check if there is an attached screen"
	if pgrep -f "screen -D -r i3jobs" >/dev/null
	then
		: #wmctrl -a i3jobs
	else
		notify "start a terminal and attach"
		alacritty --class i3jobs --title i3jobs --command screen -D -r i3jobs & >/dev/null 2>&1
	fi
fi
