#!/usr/bin/env bash
#set -x

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail

# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

trap info INT TERM EXIT

###############################################################################

OIFS=$IFS
NIFS=$'\n'
IFS=$NIFS

dotadds="
.asdfrc
.bash_completion
.bash_logout
.bash_profile
.bashrc
.bashrc.d/
.config/alacritty/
.config/asdf-plugin-list
.config/broot/
.config/dunst/dunstrc
.config/dunst/dunstrc.d_*
.config/environment.d/
.config/gtk-2.0/
.config/gtk-3.0/
.config/helm/repositories.yaml
.config/helm/repo-list.yaml
.config/htop/
.config/krew-index-list
.config/krew-list
.config/lvim/			:!.config/lvim/lazy-lock.json
.config/mimeapps.list
.config/nvim/           :!.config/nvim/plugged/           :!.config/nvim/plugged/
.config/pip/
.config/pulse/daemon.conf
.config/ranger/
.config/picom.conf
.config/starship.toml
.config/sway/
.config/remmina			:!.config/remmina/*.remmina
.local/share/remmina	:!.local/share/remmina/*.remmina
.config/user-dirs.dirs
.editorconfig
.gitconfig
.gitconfig.d/
.gitignore
.gitignore.d/dot
.git-template/
.i3/
.kube/kubie.yaml
.kube/plugin-completion-config/
.local/etc
.local/man/
.local/share/applications/
.local/share/bash-completion
.local/share/broot/
.local/share/direnv/allow/
.local/share/doc/
.local/share/flatpak/ :!.local/share/flatpak/db/
.local/share/icons/
.local/share/nautilus/
.local/share/nemo/
.pam_environment
.pastebinit.xml
.profile
.screenlayout
.screenrc
.selected_editor
.tigrc
.tool-versions
.XCompose
.Xresources
bin/
$(find $HOME/src/ -name '.envrc' -type f -not -path '*/src/archive*' -not -path '*/src/tmp/*')
Applications
Backgrounds
bin
bin2
Desktop
Downloads
Music
PDF
Pictures
Public
Templates
Videos
"

sdotadds="
.config/gandi/
.config/mopidy/mopidy.conf
.docker/ :!.docker/buildx/
.aws/
.cert/
.config/doctl/ :!.config/doctl/cache/
.config/gandi/
.config/gcloud/ :!.config/gcloud/*.db :!.config/gcloud/cache/ :!.config/gcloud/logs/ :!.config/gcloud/surface_data/ :!.config/gcloud/.last*
.config/gotify/
.config/hcloud/
.config/mopidy/
.config/scw/
.gitignore.d/sdot
.gnupg/
.kube/ :!.kube/cache/ :!.kube/config :!.kube/http-cache/ :!.kube/kubie.yaml :!.kube/.switch_tmp/ :!.kube/.switch_history
.local/share/remmina/*.remmina
.s3cfg
.src/
.ssh/ :!.ssh/*_known_hosts :!.ssh/known_hosts*
.talos/
bins/
etc/
src/*.sh
"


###############################################################################

function dotsadd() {
	cd $HOME

	set +o errexit
	sub "dot"
	for entry in ${dotadds}
	do
		IFS=$OIFS
		vcsh run dot git add --force ${entry} || (echo ; title "ERROR ADDING ${entry}")
		IFS=$NIFS
	done
	echo
	sub "sdot"
	for entry in ${sdotadds}
	do
		IFS=$OIFS
		vcsh run sdot git add --force ${entry} || (echo ; title "ERROR ADDING ${entry}")
		IFS=$NIFS
	done
	echo
	set -o errexit
}

function title() {
	local msg
	IFS=$OIFS
	msg="${*}"

	echo -e "\n--------------------------------"
	echo -e "${msg} ... "
	echo -e "--------------------------------\n"
	IFS=$NIFS
}

function sub() {
	local msg
	IFS=$OIFS
	msg="${*}"
	echo -e "\n*** ${msg} ... \n"
	IFS=$NIFS
}

function log() {
	local msg
	IFS=$OIFS
	msg="${*}"
	echo -e "${msg} ... "
	IFS=$NIFS
}

function info() {
	title Status
	vcsh foreach status --short --branch --verbose --show-stash
}

###############################################################################

cd $HOME

if [ -z "${1:-}" ]
then
	title Usage $0
	echo "up | pull | add | commit | push | all"
	exit
fi

while [ -n "${1:-}" ]
do
	action="${1:-}"
	if [ "${action}" = "up" ] || [ "${action}" = "pull" ] || [ "${action}" = "all" ]
	then
		title Update
		vcsh foreach remote update --prune
	fi
	if [ "${action}" = "pull" ] || [ "${action}" = "all" ]
	then
		title Pull
		vcsh foreach pull --autostash
	fi
	if [ "${action}" = "add" ] || [ "${action}" = "all" ]
	then
		title Add
		dotsadd
		if [ "${action}" = "all" ]
		then
			info
		fi
	fi
	if [ "${action}" = "commit" ] || [ "${action}" = "all" ]
	then
		title Committing
		vcsh foreach commit -m "update from $HOSTNAME"
	fi
	if [ "${action}" = "push" ] || [ "${action}" = "all" ]
	then
		title Pushing
		vcsh foreach pushall
	fi
	shift
done
