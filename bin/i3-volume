#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail


# load some defaults
# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

action=${1:-get}
value=${2:-50}
steppa=5
stepso=5
icon="audio-volume-medium"

function sonos_playing() {
	if [ "$(sonos state)" = "PLAYING" ]
	then
		return 0
	else
		return 1
	fi
}

function sonos_dlna() {
	if [ "$(pa-default short)" = "officesonosplay3mediarenderer_dlna" ]
	then
		return 0
	else
		return 1
	fi
}

function sonos_save_volume() {
	sonos volume > "${SONOS_VOLUME_CACHE}"
}

function sonos_get_volume() {
	if [ ! -e "${SONOS_VOLUME_CACHE}" ]
	then
		sonos_save_volume
	fi
	echo -n "$(cat "${SONOS_VOLUME_CACHE}")"
}

function sonos_is_muted() {
	if [ "$(sonos volume)" -eq 0 ]
	then
		return 0
	else
		return 1
	fi
}

function sonos_mute() {
	if ! sonos_is_muted
	then
		# sonos is not muted, save current volume and set it to 0
		sonos_save_volume
		currentvolume=$(sonos volume)
		sonos volume -${currentvolume}
	fi
}

function sonos_unmute() {
	if sonos_is_muted
	then
		# sonos is muted, restore previous volume
		lastvolume=$(sonos_get_volume)
		if [ "${lastvolume}" -eq 0 ]
		then
		›   # current AND cached volume are 0
		›   # let's just set some default
		›   lastvolume=15
		fi
		sonos volume +${lastvolume}
	fi
}

function sonos_toggle() {
	local lastvolume
	if sonos_is_muted
	then
		sonos_unmute
	else
		sonos_mute
	fi
}

function volume() {
	local device="${1}"
	local action="${2}"
	local value="${3:-50}"
	case "${action}" in
		set)
			case "${device}" in
				sonos)
					_vol=$(( ${value} - ${level1} ))
					if [ ${_vol} -gt 0 ]
					then
						_vol="+${_vol}"
					fi
					sonos volume ${_vol}
					;;
				pa)
					ponymix set-volume ${value}
					;;
			esac
			;;
		up)
			case "${device}" in
				sonos)
					sonos volume +${stepso}
					;;
				pa)
					ponymix increase ${steppa}
					;;
			esac
			icon=audio-volume-high
			;;
		down)
			case "${device}" in
				sonos)
					sonos volume -${stepso}
					;;
				pa)
					ponymix decrease ${steppa}
					;;
			esac
			icon=audio-volume-low
			;;
		is-muted)
			case "${device}" in
				sonos)
					sonos_is_muted
					;;
				pa)
					ponymix is-muted
					;;
			esac
			;;
		mute)
			case "${device}" in
				sonos)
					sonos_mute
					;;
				pa)
					ponymix mute
					;;
			esac
			icon=audio-volume-muted
			;;
		unmute)
			case "${device}" in
				sonos)
					sonos_unmute
					;;
				pa)
					ponymix unmute
					;;
			esac
			;;
		toggle)
			case "${device}" in
				sonos)
					if sonos_is_muted
					then
						icon=audio-volume-medium
					else
						icon=audio-volume-muted
					fi
					sonos_toggle
					;;
				pa)
					if ponymix is-muted
					then
						icon=audio-volume-medium
					else
						icon=audio-volume-muted
					fi
					ponymix toggle
					;;
			esac
			;;
		*)
			{
				echo "Invalid action '${action}'" >&2
				echo "Valid actions are:"
				echo "set up down is-muted mute unmute toggle"
				exit 1
			}
	esac
}

if sonos_playing	# && ! sonos_dlna
					# if sonos is playing but not via pulse-audio
then
	# change sonos directly
	device="sonos"
	device2="Sonos"
else
	# change pulseaudio
	device="pa"
	device2="$(pa-default long)"
fi

if [ "${device}" = "sonos" ]
then
	level1="$(sonos volume)"
else
	level1="$(ponymix get-volume)"
fi

volume "${device}" "${action}" "${value:-50}"

if [ "${device}" = "sonos" ]
then
	level2="$(sonos volume)"
else
	level2="$(ponymix get-volume)"
fi
notify_desktop low "$device2 [$level2]" "volume ${action} ${level1} → ${level2}" $icon i3-volume
