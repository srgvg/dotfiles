###
# https://starship.rs/advanced-config/#style-strings
#
# Style strings are a list of words, separated by whitespace. The words are not case sensitive (i.e. bold and BoLd are considered the same string). Each word can be one of the following:
#
#     bold
#     italic
#     underline
#     dimmed
#     inverted
#     blink
#     hidden
#     strikethrough
#     bg:<color>
#     fg:<color>
#     <color>
#     none
#
# where <color> is a color specifier (discussed below). fg:<color> and <color> currently do the same thing, though this may change in the future. inverted swaps the background and foreground colors. The order of words in the string does not matter.
#
# The none token overrides all other tokens in a string if it is not part of a bg: specifier, so that e.g. fg:red none fg:blue will still create a string with no styling. bg:none sets the background to the default color so fg:red bg:none is equivalent to red or fg:red and bg:green fg:red bg:none is also equivalent to fg:red or red. It may become an error to use none in conjunction with other tokens in the future.
#
# A color specifier can be one of the following:
#
#   * One of the standard terminal colors:
#
#	black,
#	red,
#	green,
#	blue,
#	yellow,
#	purple,
#	cyan,
#	white.

# 	You can optionally prefix these with bright- to get the bright version (e.g. bright-white).
#
#   * A # followed by a six-digit hexadecimal number. This specifies an RGB color hex code
#
#   * A number between 0-255. This specifies an 8-bit ANSI Color Code
#
#
###
#
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

# Timeout for starship to scan files (in milliseconds).
scan_timeout = 30

##continuation_prompt = "[‚àô](bright-black) "
#continuation_prompt = "‚ñ∂‚ñ∂ "
continuation_prompt = "[‚îî‚îÄ‚îÄ‚îÄ‚ûû](bold green)  "


# Timeout for commands executed by starship (in milliseconds).
command_timeout = 500

# Configure the format of the prompt.
## Use custom format
#format = """
#[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)
#[‚îÇ](bold green)$directory$rust$package
#[‚îî‚îÄ>](bold green) """
format = """(\
    $status\
    $cmd_duration\
    $line_break\
    $line_break\
    [‚îå$fill](bold green)\
    $line_break\
    \
    [‚îÇ ](bold green)\
    $time\
    $username\
    $hostname\
    $directory\
    $line_break\
    \
    [‚îÇ ](bold green)\
    $vcsh\
    $git_branch\
    $git_state\
    $git_commit\
    $git_status\
    $line_break\
    \
    [‚îÇ ](bold green)\
    $kubernetes\
    $gcloud\
    $aws\
    $azure\
    $line_break\
    \
    [‚îÇ ](bold green)\
    $direnv\
    $package\
    $golang\
    $nodejs\
    $python\
    \
    $jobs\
    $sudo\
    $line_break\
    \
    [‚îî](bold green)(bold green)\
    )$character\
"""
right_format = """
"""

#    ${custom.bgfill}\
#    ${custom.ansible}\

###

# The fill module fills any extra space on the line with a symbol.
# If multiple fill modules are present in a line they will split the space
# evenly between them. This is useful for aligning other modules.
[fill]
symbol = '‚îÄ'
style = 'bold green'
disabled = false

[character]      # The name of the module we are configuring is "character"
success_symbol = "[‚ûû](bold green) "     # The "symbol" segment is being set to "‚ûú"
error_symbol = "[‚ûû](bold red) "
#vicmd_symbol = "[‚ùÆ](bold green)"

[cmd_duration]
disabled = false
format = "‚ûû took [$duration]($style) "
min_time = 1_000
show_milliseconds = true
style = "bold yellow"
# https://github.com/starship/starship/pull/1019/files
show_notifications = false
min_time_to_notify = 30_000

[directory]
disabled = false
truncation_length = 5
truncate_to_repo = false
# The number of characters to use when applying fish shell pwd path logic.
#fish_style_pwd_dir_length = 10
# Displays the logical path provided by the shell (PWD) instead of the path from the OS.
use_logical_path = true
read_only = "üîí"
read_only_style = "red"
truncation_symbol = "‚Ä¶/"
format = " [$path]($style)[ $read_only]($read_only_style) "
style = "bold bright-yellow"
repo_root_style = "bold yellow"
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
home_symbol = "~"

#[directory.substitutions]
#"/Volumes/network/path" = "/net"
#"src/com/long/java/path" = "mypath"

[direnv]
disabled = false
#format = '[$symbol $rc_path $loaded]($style)[$allowed](bold red) '
format = '[$symbol $loaded]($style)[$allowed](bold red) '
symbol = 'env' #	The symbol used before displaying the direnv context.
style = 'bold #fe7f01'
detect_extensions = [] #	Which extensions should trigger this module.
detect_files = ['.envrc'] #	Which filenames should trigger this module.
detect_folders = [] #	Which folders should trigger this module.
allowed_msg = ''
denied_msg = '‚úó'
loaded_msg = 'œü'
unloaded_msg = '‚úó'

[docker_context]
disabled = false

[vcsh]
disabled = false
symbol = "vcsh"
style = "bold yellow"
format = "$symbol[$repo]($style) "

[git_branch]
disabled = false
always_show_remote = true
# The format for the module. Use "$branch" to refer to the current branch name.
symbol = 'ÓÇ† '
style = "green"
format = "$symbol [$branch](bg:bright-green fg:black bold italic)[( $remote_name(/$remote_branch))]($style)"
# Truncates a git branch to X graphemes.
#truncation_length = "2^63 - 1"
# The symbol used to indicate a branch name was truncated. You can use "" for no symbol
truncation_symbol = "‚Ä¶"
only_attached = true

[git_state]
disabled = false
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "green"
format = "\\([ $state($progress_current/$progress_total)]($style)\\) "

[git_commit]
disabled = false
tag_disabled = false
commit_hash_length = 10
format = "[ \\(([$tag](bg:bright-green fg:black bold italic) / )($hash)\\)]($style bold italic)"
style = "green"
only_detached = false
tag_symbol = "üè∑  "

[git_status]
disabled = false
conflicted = "="
ahead = "‚á°${count}"
behind = "‚á£${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
untracked = "?${count}"
stashed	= "s${count}"
modified = "!${count}"
staged = "+${count}"
renamed = "¬ª${count}"
deleted = "‚úò${count}"
style = "bold green"
# $all_status ~ $conflicted$stashed$deleted$renamed$modified$staged$untracked
# ahead_behind	Displays diverged ahead or behind format string based on the current status of the repo
format = "[( ${all_status})( ${ahead_behind})]($style) "

[hostname]
ssh_only = true
style = "bold green"
format = "[@$hostname $ssh_symbol]($style)"

[kubernetes]
# https://starship.rs/config/#kubernetes
disabled = false
#symbol = "‚ò∏"
#symbol = "‚õµ"
symbol = "‚ò∏ "
#format = "[${symbol}\\[${context}(/$namespace)\\]]($style) "
#format = "[${symbol} ${context}( \\[$namespace\\])]($style) "
#format = "[${symbol} ${user}@${cluster} ${context}( \\[$namespace\\])]($style) "
#format = "[${symbol} ${context}( \\[$namespace\\])]($style) "
#format = "[${symbol} [$context](underline bold bright-cyan)(/[$namespace](bold bright-cyan))]($style) "
format = "[${symbol} $context( / [$namespace](underline bold)) \n[‚îÇ ](bold green)]($style)"
style = "bold cyan"
#namespace_spaceholder = "none"

[kubernetes.context_aliases]
#"k3s0.office.ginsys.net" = "home"

[gcloud]
style = "bold bright-blue"
format = "[($symbol $account(@$domain)( / [$project](underline bold ))( / $region)) \n[‚îÇ ](bold green)]($style)"
symbol = "\\[GCP\\]"
# \n[‚îÇ ](bold green)

[aws]
format = "[\\[($symbol $profile(/$region))\\]\n[‚îÇ ](bold green)]($style) "
style = "bold yellow"
symbol = "\\[AWS\\]"

# \n[‚îÇ ](bold green)
[aws.region_aliases]
#ap-southeast-2 = "au"
#us-east-1 = "va"

[azure]
disabled = false
format = '[$symbol $username@$subscription]($style) '
#symbol = 'Ô¥É '
symbol = "\\[AZR\\]"
style = 'bold cyan'

[package]
disabled = true

[python]
disabled = false
#symbol = "py "
style = "yellow bold"
pyenv_version_name = false
#pyenv_prefix = "pyenv"
#scan_for_pyfiles = true
python_binary = "python3"
#format = "[${symbol}${pyenv_prefix}${version}( \\($virtualenv\\))]($style) "
#format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
format = '[${symbol}(${virtualenv}/)(${version})]($style)'

[status]
disabled = false
format = "[$symbol $status ($signal_number/$signal_name )($common_meaning )]($style)"
symbol = "[‚ûû](bold green) "     # The "symbol" segment is being set to "‚ûú"
not_executable_symbol = "NOEXEC"
not_found_symbol = "NOTFOUND"
sigint_symbol = "SIGINT"
signal_symbol = "SIG"
style = "bold red"
recognize_signal_code = true
map_symbol = true

[sudo]
format = '[$symbol]($style)'
symbol = '‚ù¢'
style = "bold fg:bright-red"
disabled = true

[terraform]
format = "[${symbol}tf $version]($style) "
version_format = "v${raw}"
symbol = "üí†"
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]
style = "bold 105"
disabled = false

[time]
disabled = false
#format = "[$time]($style) "
time_format = "%T"
#format = "[üïô$time]($style) "
format = "[$time]($style) "
use_12hr = false
style = "bold yellow"
# Sets the UTC offset to use. Range from -24 < x < 24.
# Allows floats to accommodate 30/45 minute timezone offsets.
#utc_time_offset = "+2"
utc_time_offset = "local"
# Sets the time range during which the module will be shown.
# Times must be specified in 24-hours format
#time_range = "10:00:00-14:00:00"
time_range = "-"

[username]
show_always = true
format = "[$user]($style) "

###

[custom.bgfill]
command = "echo "
style="fg:black bg:bright-black"
when="true"
shell="sh"
format = "[$output\u001B\\[K]($style)"

