###
#
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false

# Timeout for starship to scan files (in milliseconds).
scan_timeout = 30

##continuation_prompt = "[∙](bright-black) "
#continuation_prompt = "▶▶ "
continuation_prompt = "[└───🡲 ](bold green)"
#  ───🠪
#  ───🠮
#  ───🠲
#  ───🡒
#  ───🡢
#  ───🡪
#  ───🡲
#  ───🢚


# Timeout for commands executed by starship (in milliseconds).
command_timeout = 1000

# Configure the format of the prompt.
format = """
(($status )($cmd_duration )\n)\
([┌$fill](bold green) \n)\
([│](bold green) $time $username $hostname $directory \n)\
([│](bold green) ($kubernetes )($vcsh )($git_branch )($git_state )($git_commit )($git_status )\n)\
([│](bold green) ${custom.talosctl} \n)\
([│](bold green) ($direnv )($package )($golang )($nodejs )($python )\n)\
([│](bold green) $gcloud$aws$azure \n)\
([│](bold green) ($jobs )($sudo )\n)\
([└──](bold green)$character)\
"""

right_format = """
"""

#    ${custom.bgfill}\
#    ${custom.ansible}\

###

# The fill module fills any extra space on the line with a symbol.
# If multiple fill modules are present in a line they will split the space
# evenly between them. This is useful for aligning other modules.
[fill]
symbol = '─'
style = 'bold green'
disabled = false

[character]      # The name of the module we are configuring is "character"
success_symbol = "[─🡲 ](bold green)"     # The "symbol" segment is being set to "➜"
error_symbol = "[─🡲 ](bold red)"
#vicmd_symbol = "[❮](bold green)"

[cmd_duration]
disabled = false
format = "➞ took [$duration]($style)"
min_time = 1_000
show_milliseconds = true
style = "bold yellow"
# https://github.com/starship/starship/pull/1019/files
show_notifications = false
min_time_to_notify = 30_000

[directory]
disabled = false
truncation_length = 5
truncate_to_repo = false
# The number of characters to use when applying fish shell pwd path logic.
#fish_style_pwd_dir_length = 10
# Displays the logical path provided by the shell (PWD) instead of the path from the OS.
use_logical_path = true
read_only = "🔒"
read_only_style = "red"
truncation_symbol = "…/"
format = "[$path]($style)[ $read_only]($read_only_style)"
style = "bold bright-yellow"
repo_root_style = "bold yellow"
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style)"
home_symbol = "~"

#[directory.substitutions]
#"/Volumes/network/path" = "/net"
#"src/com/long/java/path" = "mypath"

[direnv]
disabled = false
format = '[$symbol $loaded]($style)[$allowed](bold red)'
symbol = 'env' #	The symbol used before displaying the direnv context.
style = 'bold #fe7f01'
detect_extensions = [] #	Which extensions should trigger this module.
detect_files = ['.envrc'] #	Which filenames should trigger this module.
detect_folders = [] #	Which folders should trigger this module.
allowed_msg = ''
denied_msg = '✗'
loaded_msg = 'ϟ'
unloaded_msg = '✗'

[docker_context]
disabled = false

[vcsh]
disabled = false
symbol = "vcsh"
style = "bold yellow"
format = "$symbol[$repo]($style)"

[git_branch]
disabled = false
always_show_remote = true
symbol = 'ϟ'
style = "green"
format = "$symbol [$branch](bg:bright-green fg:black bold italic)[( $remote_name(/$remote_branch))]($style)"
# Truncates a git branch to X graphemes.
#truncation_length = "2^63 - 1"
truncation_symbol = "…"
only_attached = true

[git_state]
disabled = false
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "green"
format = "\\([ $state($progress_current/$progress_total)]($style)\\)"

[git_commit]
disabled = false
tag_disabled = false
commit_hash_length = 10
format = "[ \\(([$tag](bg:bright-green fg:black bold italic)/)($hash)\\)]($style bold italic)"
style = "green"
only_detached = false
tag_symbol = "🏷  "

[git_status]
disabled = false
conflicted = "="
ahead = "⇡${count}"
behind = "⇣${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
untracked = "?${count}"
stashed	= "s${count}"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"
style = "bold green"
format = "[( ${all_status})( ${ahead_behind})]($style)"

[hostname]
ssh_only = true
style = "bold green"
format = "[@$hostname $ssh_symbol]($style)"

[kubernetes]
disabled = false
symbol = "☸ "
format = "[$symbol $context / $namespace]($style)"
style = "bold cyan"
#namespace_spaceholder = "none"

[kubernetes.context_aliases]
#"k3s0.office.ginsys.net" = "home"

[gcloud]
style = "bold bright-blue"
format = "[($symbol $account(@$domain)( / [$project](underline bold ))( / $region)) \n[│ ](bold green)]($style)"
symbol = "\\[GCP\\]"
# \n[│ ](bold green)

[aws]
format = "[\\[($symbol $profile(/$region))\\]]($style)"
style = "bold yellow"
symbol = "\\[AWS\\]"

[aws.region_aliases]
#ap-southeast-2 = "au"
#us-east-1 = "va"

[azure]
disabled = false
format = '[$symbol $username@$subscription]($style)'
#symbol = 'ﴃ '
symbol = "\\[AZR\\]"
style = 'bold cyan'

[package]
disabled = true

[python]
disabled = false
style = "yellow bold"
pyenv_version_name = false
#scan_for_pyfiles = true
python_binary = "python3"
format = '[${symbol}(${virtualenv}/)(${version})]($style)'

[jobs]
# https://starship.rs/config/#jobs
disabled = false
symbol = '✦'
symbol_threshold = 1
number_threshold = 1
format = '[$symbol$number]($style)'
style = 'bold blue'

[status]
disabled = false
format = "[$symbol $status ($signal_number/$signal_name )($common_meaning )]($style)"
symbol = "[➞](bold green) "     # The "symbol" segment is being set to "➜"
not_executable_symbol = "NOEXEC"
not_found_symbol = "NOTFOUND"
sigint_symbol = "SIGINT"
signal_symbol = "SIG"
style = "bold red"
recognize_signal_code = true
map_symbol = true

[sudo]
format = '[$symbol]($style)'
symbol = '❢'
style = "bold fg:bright-red"
disabled = false

[terraform]
format = "[${symbol}tf $version]($style)"
version_format = "v${raw}"
symbol = "💠"
detect_extensions = ["tf", "tfplan", "tfstate"]
detect_files = []
detect_folders = [".terraform"]
style = "bold 105"
disabled = false

[time]
disabled = false
time_format = "%T"
format = "[$time]($style)"
use_12hr = false
style = "bold yellow"
#utc_time_offset = "+2"
utc_time_offset = "local"
# Sets the time range during which the module will be shown.
# Times must be specified in 24-hours format
#time_range = "10:00:00-14:00:00"
time_range = "-"

[username]
show_always = true
format = "[$user]($style)"

#[mise]
#disabled = true
#symbol = "M "


###

[custom.bgfill]
command = "echo "
style="fg:black bg:bright-black"
when="true"
shell="sh"
format = "[$output\u001B\\[K]($style)"

[custom.talosctl]
when = 'test -n "${TALOSCONFIG}"'
command = "custom-starship-talosctl.sh"
style = "bold blue"
